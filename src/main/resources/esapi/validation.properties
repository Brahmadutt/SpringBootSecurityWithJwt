# The ESAPI validator does many security checks on input, such as canonicalization
# and whitelist validation. Note that all of these validation rules are applied *after*
# canonicalization. Double-encoded characters (even with different encodings involved,
# are never allowed.
#
# To use:
#
# First set up a pattern below. You can choose any name you want, prefixed by the word
# "Validation." For example:
#   Validation.Email=^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[a-zA-Z]{2,4}$
# 
# Then you can validate in your code against the pattern like this:
#     ESAPI.validator().isValidInput("User Email", input, "Email", maxLength, allowNull);
# Where maxLength and allowNull are set for you needs, respectively.
#
# But note, when you use boolean variants of validation functions, you lose critical 
# canonicalization. It is preferable to use the "get" methods (which throw exceptions) and 
# and use the returned user input which is in canonical form. Consider the following:
#  
# try {
#    someObject.setEmail(ESAPI.validator().getValidInput("User Email", input, "Email", maxLength, allowNull));
#
Validator.SafeString=^[.\\p{Alnum}\\p{Space}]{0,1024}$
Validator.Time=([01]?[0-9]):[0-5][0-9](\\s)?(?i)(AM|PM)
Validator.Time1=([01]?[0-9]|2[0-3]):[0-5][0-9]
Validator.Email=^[A-Za-z0-9\\._%'-]+@[A-Za-z0-9\\.-]+\\.[a-zA-Z]{2,}$
Validator.IPAddress=^(?\:(?\:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?\:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
Validator.URL=^(ht|f)tp(s?)\\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(\:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\\:\\'\\/\\\\\\+\=&amp;%\\$\#_]*)?$
Validator.CreditCard=^(\\d{4}[- ]?){3}\\d{4}$
Validator.SSN=^(?\!000)([0-6]\\d{2}|7([0-6]\\d|7[012]))([ -]?)(?\!00)\\d\\d\\3(?\!0000)\\d{4}$
Validator.Password=^[A-Za-z0-9._%'\\-@!#^*$]+$
Validator.UserId=^[A-Za-z0-9_]+$
Validator.Pincode=^[\\d]*$
Validator.Phone=^[0-9-]*$
Validator.Mobile=^[\\d]*$
Validator.StateName=^[a-z\\sA-Z]{1,50}
Validator.RelationName=^[a-z\\sA-Z]{1,50}
Validator.Alpha=^[A-Za-z]*$
Validator.AlphaS=^[a-z\\sA-Z]*$
Validator.AlphaSc=^[a-z\\sA-Z-]*$
Validator.AlphaSS=^[a-zA-Z\\s)(-_,\:/]*$
Validator.Word=^[\\w]*$
Validator.WordS=^[\\w\\s]*$
Validator.WordSS=^[\\w\\s-_,\:/@\#.$\!*'%^()]*$
Validator.CommaSepratedAlphaNum=^[\\w\\s,]*$
Validator.Text=^[\\w\\s-_,\:/@\#.$\!*'%^()<>]*$
Validator.MailBody=^[\\w\\s-_,\:/.'^&;<(\\"[^\\"]*\\"|'[^']*'|[^'\\">])*>]*$
Validator.Num=^[\\d]*$
Validator.NumM=^[\\d-]*$
Validator.NumS=^[\\d\\s]*$
Validator.NumSS=^[\\d\\s-/]*$
Validator.Surname=^[a-z\\sA-Z]*$
Validator.GivenName=^[a-z\\sA-Z]*$
Validator.FatherName=^[a-z\\sA-Z]*$
Validator.DateOfBirth=^[\\d\\s-/]*$
Validator.Date=^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/](19|20|21)\\d\\d$
Validator.MMYYYY=^(0[1-9]|1[012])[-](19|20|21)\\d\\d$
Validator.Address=^[\\w\\s-_,\:/@\#.$\!*'%^()]*$
Validator.CityName=^[\\w\\s]*$
Validator.OccupationName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.DesignationName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.DistrictName=^[A-Za-z]*$
Validator.PANNumber=^[\\w]*$
Validator.TANNumber=^[\\w]*$
Validator.Name=^[a-z\\sA-Z]*$
Validator.ContactNo_Space=^[0-9)(+, -]*$
Validator.Amount=^[1-9]\d*{1,8}(\.\d+)?{0,3}$
Validator.Length=^[1-9]\d*{1,5}(\.\d+)?{0,2}$
Validator.Area=^[0-9]\d*{1,8}(\.\d+)?{0,2}$
Validator.Float15_2=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,13}(\.[0-9]{0,2})?))$
Validator.Float17_2=^([0-9]{1,15}|([0-9]{1,15}(\.[0-9]{0,2})?)|([0-9]{1,15}(\.[0-9]{0,2})?)|([0-9]{1,15}(\.[0-9]{0,2})?))$
Validator.Float8_3=^([0-9]{1,5}|([0-9]{1,5}(\.[0-9]{0,1})?)|([0-9]{1,5}(\.[0-9]{0,2})?)|([0-9]{1,5}(\.[0-9]{0,3})?))$
Validator.Float8_2=^([0-9]{1,6}|([0-9]{1,6}(\.[0-9]{0,1})?)|([0-9]{1,6}(\.[0-9]{0,2})?)|([0-9]{1,6}(\.[0-9]{0,2})?))$
Validator.Float9_2=^(\d){0,9}?(\.)(\d){0,2}$
Validator.Float10_2=^([0-9]{1,8}|([0-9]{1,8}(\.[0-9]{0,1})?)|([0-9]{1,8}(\.[0-9]{0,2})?)|([0-9]{1,8}(\.[0-9]{0,2})?))$
Validator.Float6_2=^([0-9]{1,4}|([0-9]{1,4}(\.[0-9]{0,2})?)|([0-9]{1,4}(\.[0-9]{0,2})?)|([0-9]{1,4}(\.[0-9]{0,2})?))$
Validator.Float6_3=^([0-9]{1,4}|([0-9]{1,4}(\.[0-9]{0,3})?)|([0-9]{1,4}(\.[0-9]{0,3})?)|([0-9]{1,4}(\.[0-9]{0,3})?))$
Validator.PercentageofAmmountSofar=^([0-9]{1,2}|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.RowIdValidator=^[A-Za-z0-9+\/]{18}$
Validator.WordSSSpe=^[\\w\\s-_,\:/@\#.$\!?*'%^()]*$
Validator.WordSSSpe=^[\\w\\s-_,\:/@\#.$\!?*'%^()]*$
Validator.version= ^[0-9.]*$
Validator.requestToken= ^[\\w+]*$
Validator.Latitude= ^(\\+|-)?(?:90(?:(?:\.0{1,7})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,7})?))$
Validator.Longitude= ^(\\+|-)?(?:180(?:(?:\.0{1,7})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,7})?))$
Validator.WordsWithComma=^[\\w\\s-_,\:/.'^&;<(\\"[^\\"]*\\"|'[^']*'|[^'\\">])*>]*$
Validator.WordsWithNum=^[A-Za-z0-9]*$
Validator.WordS=^[\\w\\s]*$
Validator.WordSS=^[\\w\\s-_,\:/@\#.$\!*'%^()]*$
Validator.CommaSepratedAlphaNum=^[\\w\\s,]*$
Validator.Text=^[\\w\\s-_,\:/@\#.$\!*'%^()<>]*$
Validator.MailBody=^[\\w\\s-_,\:/.'^&;<(\\"[^\\"]*\\"|'[^']*'|[^'\\">])*>]*$
Validator.Num=^[\\d]*$
Validator.NumM=^[\\d-]*$
Validator.NumS=^[\\d\\s]*$
Validator.NumSS=^[\\d\\s-/]*$
Validator.Surname=^[a-z\\sA-Z]*$
Validator.GivenName=^[a-z\\sA-Z]*$
Validator.FatherName=^[a-z\\sA-Z]*$
Validator.DateOfBirth=^[\\d\\s-/]*$
Validator.Date=^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/](19|20|21)\\d\\d$
Validator.MMYYYY=^(0[1-9]|1[012])[-](19|20|21)\\d\\d$
Validator.Address=^[\\w\\s-_,\:/@\#.$\!*'%^()]*$
Validator.CityName=^[\\w\\s]*$
Validator.OccupationName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.DesignationName=^[a-zA-Z\\s)(-_,\:/]*$
Validator.DistrictName=^[A-Za-z]*$
Validator.PANNumber=^[\\w]*$
Validator.TANNumber=^[\\w]*$
Validator.Name=^[a-z\\sA-Z]*$
Validator.ContactNo_Space=^[0-9)(+, -]*$
Validator.Amount=^[1-9]\d*{1,8}(\.\d+)?{0,3}$
Validator.Length=^[1-9]\d*{1,5}(\.\d+)?{0,2}$
Validator.Area=^[0-9]\d*{1,8}(\.\d+)?{0,2}$
Validator.Float15_2=^([0-9]{1,13}|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,13}(\.[0-9]{0,2})?)|([0-9]{1,13}(\.[0-9]{0,2})?))$
Validator.Float17_2=^([0-9]{1,15}|([0-9]{1,15}(\.[0-9]{0,2})?)|([0-9]{1,15}(\.[0-9]{0,2})?)|([0-9]{1,15}(\.[0-9]{0,2})?))$
Validator.Float8_3=^([0-9]{1,5}|([0-9]{1,5}(\.[0-9]{0,1})?)|([0-9]{1,5}(\.[0-9]{0,2})?)|([0-9]{1,5}(\.[0-9]{0,3})?))$
Validator.Float8_2=^([0-9]{1,6}|([0-9]{1,6}(\.[0-9]{0,1})?)|([0-9]{1,6}(\.[0-9]{0,2})?)|([0-9]{1,6}(\.[0-9]{0,2})?))$
Validator.Float9_2=^(\d){0,9}?(\.)(\d){0,2}$
Validator.Float10_2=^([0-9]{1,8}|([0-9]{1,8}(\.[0-9]{0,1})?)|([0-9]{1,8}(\.[0-9]{0,2})?)|([0-9]{1,8}(\.[0-9]{0,2})?))$
Validator.Float6_2=^([0-9]{1,4}|([0-9]{1,4}(\.[0-9]{0,2})?)|([0-9]{1,4}(\.[0-9]{0,2})?)|([0-9]{1,4}(\.[0-9]{0,2})?))$
Validator.Float6_3=^([0-9]{1,4}|([0-9]{1,4}(\.[0-9]{0,3})?)|([0-9]{1,4}(\.[0-9]{0,3})?)|([0-9]{1,4}(\.[0-9]{0,3})?))$
Validator.PercentageofAmmountSofar=^([0-9]{1,2}|([0-9]{1,2}(\.[0-9]{0,2})?))$
Validator.RowIdValidator=^[A-Za-z0-9+\/]{18}$
Validator.WordSSSpe=^[\\w\\s-_,\:/@\#.$\!?*'%^()]*$
Validator.WordSSSpe=^[\\w\\s-_,\:/@\#.$\!?*'%^()]*$
Validator.version= ^[0-9.]*$
Validator.requestToken= ^[\\w+]*$
Validator.Latitude= ^(\\+|-)?(?:90(?:(?:\.0{1,7})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,7})?))$
Validator.Longitude= ^(\\+|-)?(?:180(?:(?:\.0{1,7})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,7})?))$
Validator.IFSC=^[A-Za-z]{4}[a-zA-Z0-9]{7}$
Validator.VehicleRegNumber=^[A-Za-z]{2}[a-zA-Z0-9]{1,4}[0-9]{1,4}$

